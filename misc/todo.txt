Day 0:
Hour 1:
- Project Setup:
- Github. X
- Windows Entry Point. X
- Create a Window. X
- Setup a basic msg pump. X
- Write pixels to the window.
- Allocate a buffer and display it to the window through StretchDIBits. X
- Some Basic Rendering Functions:
- Clear Buffer. X
- Render Rectangle.

- Capture Windows Input.

Tangental TODOS (TT: These todos have nothing to do with the project, but
to save time we can do these after our 1 hour session!)

- Check emacs mark set bug. (Maybe fixed ? See cua-mode in init.el)

Summary: Almost got done with the rendering functions, wasnt able to start input capturing, for next time!

-------------------------------
Day 1:
Hour 2:
- Clear Buffer check (memset). X
- Render Rectangle Call. X
- Capture Windows Input (Mouse location for now).
- Camera Concept.
- World Map Concept.

TT:
- Clock to only do avoid craming my CPU with drawcalls.
- Flip Y.
- Resize Window (do this later)
-------------------------------
Day 2:
Hour 3:
- Capture Windows Input (Mouse location for now). X
- Clock, to set constant frame rate. X
    - More testing needed though.
- Camera Concept.
- World Map Concept.

 Summary: Didn't take the time to evaluate if I was going to be able
to finish these tasks within an hour (which I didn't).. maybe thats ok
?
-------------------------------
Day 3:
Hour 4:
- Mouse Input.
- BUG: Rect Clipping to early in y.

Summary: Got stuck trying to map the back buffer to the client rect in
windows, also have a bug where y is flipped and the draw rectangle
call clips too early on y.
-------------------------------
Day 4:
Hour 5:
- FIX: Flip Y. X
- FIX: Rect Clipping to early in y. X
(- Reason about where to go next.)
- Memory Management. X
- World Concept. X
- Clickable Tiles. X
- Camera Concept.
    - Make all rendering relative to this position. <- Continue from here!

TT: Sub pixel movement (i.e floating point instead of integer positioning).

Summary: Somehow I was able to blast today, done with the above 15
minutes before. Also before starting today I felt a bit exhausted
since I had coded for 4 hours before. But after taking a break and
sticking to the 'I will code for 1 hour today no matter how bad it is'
I was able to hack around a lot which was great!
-------------------------------
Day 5:
Hour 6:
- Continue to make tiles relative to camera. X
- Player Concept
    - Player Movement, WASD start pathfinding with mouse click later ? Snap to grid ?
        - Concept of moving 'onto tile', get rid of relative floating point positions. X
        - Collision Detection. -> Need objects to collide with, world/map generation needed.
        - Other Entities to collide with, generate a map.

- Entities and World Generation:
    - 'Area' Concept that has
         -tiles
         -entities.
         Areas are relative to each other and entities can move between them.
    
Summary: Next time continue with world generation and entity assignment, collision and movement.
-------------------------------

Day 6:
Hour 7:
- Final (mandatory) hour of the week:
- World Generation.
    - Continue here next hour.
- Simple collision detection.

More:
- Weekly cleanup,
    - Consolidate 'camera transformations' so we don't have to do them all over.
    - Remove concept of pixelSpace and introduce another metric, e.g meters.
    - Math Util Functions (rect, v2/v4).
    

Summary: Thinking about world generation took longer than expected. I have an idea of how I want
tiles to be group so that a new 'group' of tiles can be generated when the player moves around,
while keeping the amount of tiles being considered low (for pathfinding in the future). Not sure
if this 'solution' is correct but the goal with this project is to experiement and try what I think
might be correct instead of trying to analyze for too long.

-------------------------------
