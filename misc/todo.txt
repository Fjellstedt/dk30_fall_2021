Day 0:
Hour 1:
- Project Setup:
- Github. X
- Windows Entry Point. X
- Create a Window. X
- Setup a basic msg pump. X
- Write pixels to the window.
- Allocate a buffer and display it to the window through StretchDIBits. X
- Some Basic Rendering Functions:
- Clear Buffer. X
- Render Rectangle.

- Capture Windows Input.

Tangental TODOS (TT: These todos have nothing to do with the project, but
to save time we can do these after our 1 hour session!)

- Check emacs mark set bug. (Maybe fixed ? See cua-mode in init.el)

Summary: Almost got done with the rendering functions, wasnt able to start input capturing, for next time!

-------------------------------
Day 1:
Hour 2:
- Clear Buffer check (memset). X
- Render Rectangle Call. X
- Capture Windows Input (Mouse location for now).
- Camera Concept.
- World Map Concept.

TT:
- Clock to only do avoid craming my CPU with drawcalls.
- Flip Y.
- Resize Window (do this later)
-------------------------------
Day 2:
Hour 3:
- Capture Windows Input (Mouse location for now). X
- Clock, to set constant frame rate. X
    - More testing needed though.
- Camera Concept.
- World Map Concept.

 Summary: Didn't take the time to evaluate if I was going to be able
to finish these tasks within an hour (which I didn't).. maybe thats ok
?
-------------------------------
Day 3:
Hour 4:
- Mouse Input.
- BUG: Rect Clipping to early in y.

Summary: Got stuck trying to map the back buffer to the client rect in
windows, also have a bug where y is flipped and the draw rectangle
call clips too early on y.
-------------------------------
Day 4:
Hour 5:
- FIX: Flip Y. X
- FIX: Rect Clipping to early in y. X
(- Reason about where to go next.)
- Memory Management. X
- World Concept. X
- Clickable Tiles. X
- Camera Concept.
    - Make all rendering relative to this position. <- Continue from here!

TT: Sub pixel movement (i.e floating point instead of integer positioning).

Summary: Somehow I was able to blast today, done with the above 15
minutes before. Also before starting today I felt a bit exhausted
since I had coded for 4 hours before. But after taking a break and
sticking to the 'I will code for 1 hour today no matter how bad it is'
I was able to hack around a lot which was great!
-------------------------------
